[{"/home/josh/projects/todoer/client/src/index.tsx":"1","/home/josh/projects/todoer/client/src/components/App.tsx":"2","/home/josh/projects/todoer/client/src/components/Another.tsx":"3","/home/josh/projects/todoer/client/src/api/apollo.ts":"4","/home/josh/projects/todoer/client/src/AppRoutes.tsx":"5","/home/josh/projects/todoer/client/src/context/UserContext.tsx":"6","/home/josh/projects/todoer/client/src/components/Login.tsx":"7","/home/josh/projects/todoer/client/src/components/Header.tsx":"8","/home/josh/projects/todoer/client/src/hooks/useLoginUser.ts":"9","/home/josh/projects/todoer/client/src/ProviderWrapper.tsx":"10"},{"size":258,"mtime":1618745418490,"results":"11","hashOfConfig":"12"},{"size":657,"mtime":1618608632328,"results":"13","hashOfConfig":"12"},{"size":489,"mtime":1618429316704,"results":"14","hashOfConfig":"12"},{"size":758,"mtime":1618606659108,"results":"15","hashOfConfig":"12"},{"size":994,"mtime":1618607940438,"results":"16","hashOfConfig":"12"},{"size":110,"mtime":1618604514058,"results":"17","hashOfConfig":"12"},{"size":1662,"mtime":1618746913770,"results":"18","hashOfConfig":"12"},{"size":889,"mtime":1618747521750,"results":"19","hashOfConfig":"12"},{"size":916,"mtime":1618745082050,"results":"20","hashOfConfig":"12"},{"size":420,"mtime":1618745404540,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1cko0im",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"24"},"/home/josh/projects/todoer/client/src/index.tsx",[],["49","50"],"/home/josh/projects/todoer/client/src/components/App.tsx",["51"],"import { gql, useQuery } from \"@apollo/client\";\nimport React from \"react\";\n\nconst PROJECTS = gql`\n\tquery Projects {\n\t\tprojects {\n\t\t\tcolor\n\t\t\tid\n\t\t\tname\n\t\t\torder\n\t\t\ttodos {\n\t\t\t\tdue\n\t\t\t\tid\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst App: React.FC = (): JSX.Element => {\n\tconst { loading, data } = useQuery(PROJECTS);\n\n\tconst renderProjects = () => {\n\t\tif (!data) return null;\n\t\treturn data.projects.map((project: any) => {\n\t\t\treturn (\n\t\t\t\t<li key={project.id}>\n\t\t\t\t\t<h2>{project.name}</h2>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Projects</h1>\n\t\t\t{loading && <div>Loading projects...</div>}\n\t\t\t<ul>{renderProjects()}</ul>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","/home/josh/projects/todoer/client/src/components/Another.tsx",[],["52","53"],"/home/josh/projects/todoer/client/src/api/apollo.ts",[],"/home/josh/projects/todoer/client/src/AppRoutes.tsx",["54","55"],"import { gql, useQuery } from \"@apollo/client\";\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport App from \"./components/App\";\nimport Header from \"./components/Header\";\nimport Login from \"./components/Login\";\nimport UserContext from \"./context/UserContext\";\n\nconst GET_CURRENT_USER = gql`\n\tquery CurrentUser {\n\t\tcurrentUser {\n\t\t\temail\n\t\t\tid\n\t\t\tname\n\t\t\trole\n\t\t}\n\t}\n`;\n\nconst AppRoutes = () => {\n\tconst [user, setUser] = useState(null);\n\tconst { loading } = useQuery(GET_CURRENT_USER, {\n\t\tonCompleted: (data) => {\n\t\t\tif (data && data.currentUser) setUser(data.currentUser);\n\t\t},\n\t});\n\n\tif (loading) return <div>Loading....</div>;\n\n\tif (!user) return <Login setUser={setUser} />;\n\treturn (\n\t\t<UserContext.Provider value={user}>\n\t\t\t<Router>\n\t\t\t\t<Header setUser={setUser} />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\" component={App} />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</UserContext.Provider>\n\t);\n};\n\nexport default AppRoutes;\n","/home/josh/projects/todoer/client/src/context/UserContext.tsx",[],"/home/josh/projects/todoer/client/src/components/Login.tsx",["56","57","58","59","60"],"import React, { useState } from \"react\";\nimport { useLoginUser } from \"../hooks/useLoginUser\";\nimport {\n\tFormControl,\n\tFormLabel,\n\tFormErrorMessage,\n\tFormHelperText,\n\tInput,\n\tBox,\n\tHeading,\n\tButton,\n\tFlex,\n} from \"@chakra-ui/react\";\n\nconst Login = ({ setUser }: any) => {\n\tconst [email, setEmail] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [isSubmitting, setIsSubmitting] = useState(false);\n\tconst [error, setError] = useState(\"\");\n\n\tconst login = useLoginUser({\n\t\tsetEmail,\n\t\tsetPassword,\n\t\tsetIsSubmitting,\n\t\tsetUser,\n\t\tsetError,\n\t});\n\n\treturn (\n\t\t<Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n\t\t\t<Box m={10} p={2}>\n\t\t\t\t<Box textAlign=\"center\">\n\t\t\t\t\t<Heading marginBottom=\"10px\">Login</Heading>\n\t\t\t\t</Box>\n\t\t\t\t<Box my={4} textAlign=\"left\">\n\t\t\t\t\t<form\n\t\t\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tsetIsSubmitting(true);\n\t\t\t\t\t\t\tlogin({\n\t\t\t\t\t\t\t\tvariables: { email, password },\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<FormControl id=\"email\">\n\t\t\t\t\t\t\t<FormLabel>Email address</FormLabel>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t\t<FormControl id=\"password\">\n\t\t\t\t\t\t\t<FormLabel>Password</FormLabel>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\twidth=\"full\"\n\t\t\t\t\t\t\tmt={6}\n\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tLog in\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{error && <p style={{ color: \"red\" }}>{error}</p>}\n\t\t\t\t\t</form>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t</Flex>\n\t);\n};\n\nexport default Login;\n","/home/josh/projects/todoer/client/src/components/Header.tsx",["61","62","63","64","65","66"],"/home/josh/projects/todoer/client/src/hooks/useLoginUser.ts",["67","68","69"],"import { gql, useMutation } from \"@apollo/client\";\n\nconst LOG_IN = gql`\n\tmutation LogIn($email: String!, $password: String!) {\n\t\tloginUser(input: { email: $email, password: $password }) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\temail\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\trole\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const useLoginUser = ({\n\tsetEmail,\n\tsetPassword,\n\tsetIsSubmitting,\n\tsetUser,\n\tsetError,\n}: any) => {\n\tconst [logUserIn] = useMutation(LOG_IN, {\n\t\tonError: (err) => {\n\t\t\tif (err.message) setError(err.message);\n\t\t\tif (!err.message) setError(\"Something went wrong.\");\n\t\t\tsetTimeout(() => setError(\"\"), 3000);\n\t\t\tsetEmail(\"\");\n\t\t\tsetPassword(\"\");\n\t\t\tsetIsSubmitting(false);\n\t\t},\n\t\tonCompleted: (data) => {\n\t\t\tconst token = data.loginUser.token;\n\t\t\tconst user = data.loginUser.user;\n\t\t\tlocalStorage.setItem(\"token\", token);\n\t\t\tsetUser(user);\n\t\t\tsetError(\"\");\n\t\t\tsetEmail(\"\");\n\t\t\tsetPassword(\"\");\n\t\t\tsetIsSubmitting(false);\n\t\t},\n\t});\n\n\treturn logUserIn;\n};\n","/home/josh/projects/todoer/client/src/ProviderWrapper.tsx",["70","71","72"],"import React from \"react\";\nimport { ApolloProvider } from \"@apollo/client/react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { client } from \"./api/apollo\";\n\nconst ProviderWrapper = ({ children }: any) => {\n\treturn (\n\t\t<ChakraProvider>\n\t\t\t<ApolloProvider client={client}>\n\t\t\t\t<React.StrictMode>{children}</React.StrictMode>\n\t\t\t</ApolloProvider>\n\t\t</ChakraProvider>\n\t);\n};\n\nexport default ProviderWrapper;\n",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":25,"column":38,"nodeType":"79","messageId":"80","endLine":25,"endColumn":41,"suggestions":"81"},{"ruleId":"73","replacedBy":"82"},{"ruleId":"75","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":2,"column":17,"nodeType":"86","messageId":"87","endLine":2,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":20,"column":19,"nodeType":"90","messageId":"91","endLine":20,"endColumn":24},{"ruleId":"84","severity":1,"message":"92","line":6,"column":2,"nodeType":"86","messageId":"87","endLine":6,"endColumn":18},{"ruleId":"84","severity":1,"message":"93","line":7,"column":2,"nodeType":"86","messageId":"87","endLine":7,"endColumn":16},{"ruleId":"88","severity":1,"message":"89","line":15,"column":15,"nodeType":"90","messageId":"91","endLine":15,"endColumn":36},{"ruleId":"88","severity":1,"message":"94","line":15,"column":16,"nodeType":"95","messageId":"96","endLine":15,"endColumn":32},{"ruleId":"77","severity":1,"message":"78","line":15,"column":29,"nodeType":"79","messageId":"80","endLine":15,"endColumn":32,"suggestions":"97"},{"ruleId":"84","severity":1,"message":"98","line":2,"column":30,"nodeType":"86","messageId":"87","endLine":2,"endColumn":34},{"ruleId":"88","severity":1,"message":"89","line":6,"column":16,"nodeType":"90","messageId":"91","endLine":6,"endColumn":37},{"ruleId":"88","severity":1,"message":"94","line":6,"column":17,"nodeType":"95","messageId":"96","endLine":6,"endColumn":33},{"ruleId":"77","severity":1,"message":"78","line":6,"column":30,"nodeType":"79","messageId":"80","endLine":6,"endColumn":33,"suggestions":"99"},{"ruleId":"77","severity":1,"message":"78","line":23,"column":40,"nodeType":"79","messageId":"80","endLine":23,"endColumn":43,"suggestions":"100"},{"ruleId":"77","severity":1,"message":"78","line":41,"column":22,"nodeType":"79","messageId":"80","endLine":41,"endColumn":25,"suggestions":"101"},{"ruleId":"88","severity":1,"message":"89","line":17,"column":29,"nodeType":"90","messageId":"91","endLine":23,"endColumn":11},{"ruleId":"88","severity":1,"message":"94","line":17,"column":30,"nodeType":"95","messageId":"96","endLine":23,"endColumn":7},{"ruleId":"77","severity":1,"message":"78","line":23,"column":4,"nodeType":"79","messageId":"80","endLine":23,"endColumn":7,"suggestions":"102"},{"ruleId":"88","severity":1,"message":"89","line":6,"column":25,"nodeType":"90","messageId":"91","endLine":6,"endColumn":47},{"ruleId":"88","severity":1,"message":"94","line":6,"column":26,"nodeType":"95","messageId":"96","endLine":6,"endColumn":43},{"ruleId":"77","severity":1,"message":"78","line":6,"column":40,"nodeType":"79","messageId":"80","endLine":6,"endColumn":43,"suggestions":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["106","107"],["104"],["105"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","'FormErrorMessage' is defined but never used.","'FormHelperText' is defined but never used.","Object pattern argument should be typed with a non-any type.","ObjectPattern","anyTypedArgUnnamed",["108","109"],"'Text' is defined but never used.",["110","111"],["112","113"],["114","115"],["116","117"],["118","119"],"no-global-assign","no-unsafe-negation",{"messageId":"120","fix":"121","desc":"122"},{"messageId":"123","fix":"124","desc":"125"},{"messageId":"120","fix":"126","desc":"122"},{"messageId":"123","fix":"127","desc":"125"},{"messageId":"120","fix":"128","desc":"122"},{"messageId":"123","fix":"129","desc":"125"},{"messageId":"120","fix":"130","desc":"122"},{"messageId":"123","fix":"131","desc":"125"},{"messageId":"120","fix":"132","desc":"122"},{"messageId":"123","fix":"133","desc":"125"},{"messageId":"120","fix":"134","desc":"122"},{"messageId":"123","fix":"135","desc":"125"},{"messageId":"120","fix":"136","desc":"122"},{"messageId":"123","fix":"137","desc":"125"},"suggestUnknown",{"range":"138","text":"139"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"138","text":"140"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"141","text":"139"},{"range":"141","text":"140"},{"range":"142","text":"139"},{"range":"142","text":"140"},{"range":"143","text":"139"},{"range":"143","text":"140"},{"range":"144","text":"139"},{"range":"144","text":"140"},{"range":"145","text":"139"},{"range":"145","text":"140"},{"range":"146","text":"139"},{"range":"146","text":"140"},[399,402],"unknown","never",[262,265],[203,206],[516,519],[781,784],[356,359],[212,215]]